\addvspace {10\p@ }
\contentsline {figure}{\numberline {1.1}{\ignorespaces Image representing the Double Bridge Experiment. Image source \cite {doublebridges:image}\relax }}{2}
\contentsline {figure}{\numberline {1.2}{\ignorespaces One solution to the Berlin52.tsp problem plotted using GNU Plot. Modified version from original image source \cite {berlin52:image}\relax }}{3}
\contentsline {figure}{\numberline {1.3}{\ignorespaces Algebraic model of the pheromone deposit function for the Elitist Ant System \cite {marcdorgio:book:EAS}\relax }}{5}
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces The varation of the waterfall model used for solo development in this project. Modified from source image \cite {waterfall:image} \relax }}{12}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces The contents of the Control package show in standard UML Class diagram notation\relax }}{17}
\contentsline {figure}{\numberline {4.2}{\ignorespaces The contents of the View package show in standard UML Class diagram notation\relax }}{19}
\contentsline {figure}{\numberline {4.3}{\ignorespaces The contents of the Model package show in standard UML Class diagram notation\relax }}{22}
\contentsline {figure}{\numberline {4.4}{\ignorespaces The contents of the Utils package show in standard UML Class diagram notation\relax }}{24}
\contentsline {figure}{\numberline {4.5}{\ignorespaces The proposed manner of package interaction expressed in standard UML Class diagram notation.\relax }}{25}
\contentsline {figure}{\numberline {4.6}{\ignorespaces Implementation of the Observer and Observable Design pattern\relax }}{26}
\contentsline {figure}{\numberline {4.7}{\ignorespaces Abstract proposal for the uphill viewer interface representing the different states possible at runtime.\relax }}{28}
\contentsline {figure}{\numberline {4.8}{\ignorespaces Abstract proposal for the city detail interface.\relax }}{29}
\contentsline {figure}{\numberline {4.9}{\ignorespaces Abstract proposal for the equation viewer interface.\relax }}{30}
\contentsline {figure}{\numberline {4.10}{\ignorespaces Design of the File IO error feedback interface.\relax }}{31}
\contentsline {figure}{\numberline {4.11}{\ignorespaces Flow diagram representation of the algorithm described in algorithm 1\hbox {}\relax }}{33}
\contentsline {figure}{\numberline {4.12}{\ignorespaces Abstract overview of system interactions based on Algorithm 1\hbox {}\relax }}{34}
\contentsline {figure}{\numberline {4.13}{\ignorespaces Flow diagram representation of the aglorithm described in algorithm 2\hbox {}\relax }}{37}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {5.1}{\ignorespaces Implementation of the proposed user interface. The contents of the red polygon highlights the additional features not present in the initial design.\relax }}{40}
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {B.1}{\ignorespaces Basic abstract overview of the Model-View-Controller pattern\relax }}{61}
\contentsline {figure}{\numberline {B.2}{\ignorespaces Proposed implementation of the Observer and Observable Design pattern\relax }}{62}
\contentsline {figure}{\numberline {B.3}{\ignorespaces Proposed high-level implementation of the Singleton pattern demonstrating how the sole instance of the graphical user interface will be tracked.\relax }}{63}
\contentsline {figure}{\numberline {B.4}{\ignorespaces Initial Class Diagram representing the main modules, packages and system interactions using UML notation.\relax }}{64}
\contentsline {figure}{\numberline {B.5}{\ignorespaces Proposed design for the graphical user interface, showing the key elements in their planned locations.\relax }}{68}
\contentsline {figure}{\numberline {B.6}{\ignorespaces Proposed design for the illegal parameter error message displayed to the user\relax }}{69}
\contentsline {figure}{\numberline {B.7}{\ignorespaces High level flow digram representing the psudeo code for Algorithm 5\hbox {}, section 2.6.1\hbox {}\relax }}{71}
\contentsline {figure}{\numberline {B.8}{\ignorespaces Sequence diagram representing Algorithm 5\hbox {}, section 2.6.1\hbox {}\relax }}{73}
\contentsline {figure}{\numberline {B.9}{\ignorespaces Algebraic model of the probabilistic function used to calculate next move for any Agent \cite {probfunc:image}\relax }}{74}
\contentsline {figure}{\numberline {B.10}{\ignorespaces Algebraic model of the pheromone deposit function used to calculate the correct values for the pheromone matrix \cite {pheromone:image}\relax }}{74}
\contentsline {figure}{\numberline {B.11}{\ignorespaces Algebraic model of the function used to calculate the how much new pheromone is deposited at $xy$ \cite {new:pheromone:image}. Pheromone is only updated if the Agent $k$ has visited point $xy$.\relax }}{75}
\contentsline {figure}{\numberline {B.12}{\ignorespaces Example World representation using a two-dimensional Integer Array\relax }}{76}
\contentsline {figure}{\numberline {B.13}{\ignorespaces Example Pheromone representation using a two-dimensional Double Array with default initial values\relax }}{77}
\contentsline {figure}{\numberline {B.14}{\ignorespaces Example Pheromone visualisation\relax }}{78}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {C.1}{\ignorespaces Snippet of code used to inialise the pheromone Matrix. $cities$ is a list of $City$ obejcts. $aco$ is the instance of the $AntColonyOptimisation$ Class\relax }}{79}
\contentsline {figure}{\numberline {C.2}{\ignorespaces Snippet of code used to inialise the distance Matrix. $cities$ is a list of $City$ obejcts.\relax }}{79}
\contentsline {figure}{\numberline {C.3}{\ignorespaces Snippet of code used to inialise the inverted distance Matrix. $cities$ is a list of $City$ obejcts.\relax }}{80}
\contentsline {figure}{\numberline {C.4}{\ignorespaces Snippet of code used to inialise the collection of $City$ obejcts.\relax }}{80}
\contentsline {figure}{\numberline {C.5}{\ignorespaces Snippet of code used to inialise the collection of $Ant$ obejcts.\relax }}{80}
\contentsline {figure}{\numberline {C.6}{\ignorespaces Snippet of code used to update the pheromone values for every edge.\relax }}{81}
\contentsline {figure}{\numberline {C.7}{\ignorespaces Snippet of code used to select the Ants next location. This is a modifiedf version of the code provided by Thomas Jungblut \cite {tjung:aco:blog}\relax }}{82}
\contentsline {figure}{\numberline {C.8}{\ignorespaces Snippet of code used to automatically execute the algorithm untill compeltion\relax }}{83}
\contentsline {figure}{\numberline {C.9}{\ignorespaces Snippet of code used to execute the algorithm on a step by step basis\relax }}{84}
